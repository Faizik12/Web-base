"""Add sr_management_db, create ot_records and inspection_schedule

Revision ID: b99c03b4a66f
Revises: dc2a04734425
Create Date: 2025-07-02 20:11:24.074921

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.orm import Session

from backend.models.databases import LogicalDataBase, Table


# revision identifiers, used by Alembic.
revision: str = 'b99c03b4a66f'
down_revision: Union[str, None] = 'dc2a04734425'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('inspection_schedules',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('inspection_planned_date', sa.Date(), nullable=False),
    sa.Column('inspection_actual_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ot_records',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('middle_name', sa.String(length=50), nullable=False),
    sa.Column('position', sa.String(length=50), nullable=False),
    sa.Column('eb_group', sa.SmallInteger(), nullable=False),
    sa.Column('employment_start_date', sa.Date(), nullable=False),
    sa.Column('is_engineer', sa.Boolean(), nullable=False),
    sa.Column('is_worker', sa.Boolean(), nullable=False),
    sa.Column('eb_exam_previous_date', sa.Date(), nullable=False),
    sa.Column('eb_exam_planned_date', sa.Date(), nullable=False),
    sa.Column('eb_exam_actual_date', sa.Date(), nullable=False),
    sa.Column('ot_exam_previous_date', sa.Date(), nullable=False),
    sa.Column('ot_exam_planned_date', sa.Date(), nullable=False),
    sa.Column('ot_exam_actual_date', sa.Date(), nullable=False),
    sa.Column('height_work_exam_previous_date', sa.Date(), nullable=True),
    sa.Column('height_work_exam_planned_date', sa.Date(), nullable=True),
    sa.Column('height_work_exam_actual_date', sa.Date(), nullable=True),
    sa.Column('retraining_planned_date', sa.Date(), nullable=True),
    sa.Column('retraining_actual_date', sa.Date(), nullable=True),
    sa.Column('pb_instruction_planned_date', sa.Date(), nullable=False),
    sa.Column('pb_instruction_actual_date', sa.Date(), nullable=False),
    sa.Column('ot_training_actual_date', sa.Date(), nullable=True),
    sa.Column('ot_training_planned_date', sa.Date(), nullable=True),
    sa.CheckConstraint('CAST(is_engineer AS INTEGER) + CAST(is_worker AS INTEGER) = 1', name='chk_exclusive_role'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###

    bind = op.get_bind()
    session = Session(bind=bind)

    try:
        logical_db = LogicalDataBase(name='База начальства СР') # type: ignore
        session.add(logical_db)
        session.flush()

        tables = [
            Table(
                display_name='График проверок', # type: ignore
                physical_name='inspection_schedules', # type: ignore
                logical_database_id=logical_db.id # type: ignore
            ),
            Table(
                display_name='Учет ОТ', # type: ignore
                physical_name='ot_records', # type: ignore
                logical_database_id=logical_db.id # type: ignore
            )
        ]
        session.add_all(tables)
        session.commit()

    except:
        session.rollback()
        raise
    finally:
        session.close()


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ot_records')
    op.drop_table('inspection_schedules')
    # ### end Alembic commands ###

    bind = op.get_bind()
    session = Session(bind=bind)

    try:
        logical_db = session.query(LogicalDataBase).filter_by(name='База начальства СР').one_or_none()
        if logical_db:
            session.query(Table).filter_by(logical_database_id=logical_db.id).delete(synchronize_session=False)
            session.delete(logical_db)
            session.commit()
    except:
        session.rollback()
        raise
    finally:
        session.close()
